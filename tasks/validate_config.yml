# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 MASH project contributors
# SPDX-FileCopyrightText: 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: (Deprecation) Catch and report renamed settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.old + '$'), wantlist=True) | length > 0"
  with_items:
    - { "old": "forgejo_data_dir_path", "new": "forgejo_data_path" }
    - { "old": "forgejo_config_dir_path", "new": "forgejo_config_path" }
    - { "old": "forgejo_http_bind_port", "new": "forgejo_container_http_host_bind_port" }
    - { "old": "forgejo_ssh_bind_port", "new": "forgejo_container_ssh_host_bind_port" }
    - { "old": "forgejo_config_server_ssh_listen_port", "new": "forgejo_container_ssh_port" }
    - { "old": "forgejo_config_database_type", "new": "forgejo_database_type" }
    - { "old": "forgejo_config_database_hostname", "new": "<Replace with forgejo_database_mysql_hostname or forgejo_database_postgres_hostname>" }
    - { "old": "forgejo_config_database_port", "new": "<Replace with forgejo_database_mysql_port or forgejo_database_postgres_port>" }
    - { "old": "forgejo_config_database_name", "new": "forgejo_database_name" }
    - { "old": "forgejo_config_database_username", "new": "<Replace with forgejo_database_mysql_username or forgejo_database_postgres_username>" }
    - { "old": "forgejo_config_database_password", "new": "<Replace with forgejo_database_mysql_password or forgejo_database_postgres_password>" }
    - { "old": "forgejo_database_hostname", "new": "<Replace with forgejo_database_mysql_hostname or forgejo_database_postgres_hostname>" }
    - { "old": "forgejo_database_port", "new": "<Replace with forgejo_database_mysql_port or forgejo_database_postgres_port>" }
    - { "old": "forgejo_database_username", "new": "<Replace with forgejo_database_mysql_username or forgejo_database_postgres_username>" }
    - { "old": "forgejo_database_password", "new": "<Replace with forgejo_database_mysql_password or forgejo_database_postgres_password>" }
    - { "old": "forgejo_container_additional_environment_variables", "new": "forgejo_environment_variables_additional_variables" }
    - { "old": "forgejo_systemd_required_systemd_services_list", "new": "forgejo_systemd_required_services_list" }
    - { "old": "forgejo_systemd_required_systemd_services_list_default", "new": "forgejo_systemd_required_services_list_default" }
    - { "old": "forgejo_systemd_required_systemd_services_list_auto", "new": "forgejo_systemd_required_services_list_auto" }
    - { "old": "forgejo_systemd_required_systemd_services_list_custom", "new": "forgejo_systemd_required_services_list_custom" }
    - { "old": "forgejo_http_header_content_permission_policy", "new": "forgejo_http_header_permissions_policy" }

- name: Fail if required Forgejo settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item.name }}`) for using this role.
  when: "item.when | bool and lookup('vars', item.name, default='') | string | length == 0"
  with_items:
    - { "name": "forgejo_hostname", when: true }
    - { "name": "forgejo_uid", when: true }
    - { "name": "forgejo_gid", when: true }
    - "name": "forgejo_container_labels_traefik_compression_middleware_name"
      when: "{{ forgejo_container_labels_traefik_compression_middleware_enabled }}"

- name: Fail if Forgejo database type invalid
  ansible.builtin.fail:
    msg: >-
      forgejo_database_type must be 'mysql', 'postgres' or 'sqlite'
  when: "forgejo_database_type not in ['mysql', 'postgres', 'sqlite']"

- name: Fail if required Forgejo + MySQL integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `forgejo_database_type` is `mysql`
  when: "forgejo_database_type == 'mysql' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - forgejo_database_mysql_hostname
    - forgejo_database_mysql_password

- name: Fail if required Forgejo + Postgres integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `forgejo_database_type` is `postgres`
  when: "forgejo_database_type == 'postgres' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - forgejo_database_postgres_hostname
    - forgejo_database_postgres_password

- name: Fail if SMTP settings are missing (and SMTP is enabled by setting host)
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) to correctly set up email via SMTP.
  when: "forgejo_config_mailer_enabled | bool and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - forgejo_config_mailer_smtp_addr
    - forgejo_config_mailer_from

- name: Run if Traefik is enabled
  when: forgejo_container_labels_traefik_enabled | bool
  block:
    - name: Fail if Traefik settings required for Forgejo are not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "lookup('vars', item, default='') | string | length == 0"
      with_items:
        - forgejo_container_labels_traefik_hostname
        - forgejo_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `forgejo_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if forgejo_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          forgejo_container_labels_traefik_path_prefix (`{{ forgejo_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/forgejo`).
      when: "forgejo_container_labels_traefik_path_prefix != '/' and forgejo_container_labels_traefik_path_prefix[-1] == '/'"
